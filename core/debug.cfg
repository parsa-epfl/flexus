
target "debug-comp"
{
    filter
    {
        -Stats;
        -IterationCount;
        -Assert;
        +Verb + &{ ComponentName } exists;
    }
    action
    {
        log console
        {
            GlobalCount
        }
        " <"
        {
            File
        }
        ":"
        {
            Line
        }
        "> ("
        {
            ComponentName
        }
        "["
        {
            ScaffoldIdx
        }
        "]) {"
        {
            Cycles
        }
        "}- "
        {
            Message
        }
        "\n";
        log(debug.out)
        {
            GlobalCount
        }
        " <"
        {
            File
        }
        ":"
        {
            Line
        }
        "> ("
        {
            ComponentName
        }
        "["
        {
            ScaffoldIdx
        }
        "]) {"
        {
            Cycles
        }
        "}- "
        {
            Message
        }
        "\n";
    }
}
target "debug-feeder"
{
    filter
    {
        -Stats;
        -IterationCount;
        -Assert;
        +Verb + &Feeder;
    }
    action
    {
        log console
        {
            GlobalCount
        }
        " <"
        {
            File
        }
        ":"
        {
            Line
        }
        "> (feeder["
        {
            ScaffoldIdx
        }
        "]) {"
        {
            Cycles
        }
        "}- "
        {
            Message
        }
        "\n";
        log(debug.out)
        {
            GlobalCount
        }
        " <"
        {
            File
        }
        ":"
        {
            Line
        }
        "> (feeder["
        {
            ScaffoldIdx
        }
        "]) {"
        {
            Cycles
        }
        "}- "
        {
            Message
        }
        "\n";
    }
}
target "debug-noncomp"
{
    filter
    {
        -Stats;
        -IterationCount;
        -Assert;
        -{ ComponentName } exists;
        +Verb + ;
    }
    action
    {
        log console
        {
            GlobalCount
        }
        " <"
        {
            File
        }
        ":"
        {
            Line
        }
        "> {"
        {
            Cycles
        }
        "}- "
        {
            Message
        }
        "\n";
        log(debug.out)
        {
            GlobalCount
        }
        " <"
        {
            File
        }
        ":"
        {
            Line
        }
        "> {"
        {
            Cycles
        }
        "}- "
        {
            Message
        }
        "\n";
    }
}
target "end-of-parallel"
{
    filter
    {
        +MagicBreak& { MagicBreakNo } == 3;
    }
    action
    {
        log(debug.out)
        {
            GlobalCount
        }
        " {"
        {
            Cycles
        }
        "} Reached end of parallel phase\n";
        log(stats.out) "Reached end of parallel phase at cycle"
        {
            Cycles
        }
        "\n";
        print - stats;
        break;
    }
}
target "iteration-count"
{
    filter
    {
        +IterationCount;
    }
    action
    {
        log console
        {
            GlobalCount
        }
        " cpu["
        {
            ScaffoldIdx
        }
        "] {"
        {
            Cycles
        }
        "}- "
        {
            Message
        }
        "\n";
        log(debug.out)
        {
            GlobalCount
        }
        " cpu["
        {
            ScaffoldIdx
        }
        "] {"
        {
            Cycles
        }
        "}- "
        {
            Message
        }
        "\n";
    }
}
target "stats"
{
    filter
    {
        +Stats;
    }
    action
    {
        log console
        {
            Source
        }
        ": "
        {
            Message
        }
        "\n";
        log(stats.out)
        {
            Source
        }
        ": "
        {
            Message
        }
        "\n";
    }
}
target "assertions"
{
    filter
    {
        +Assert;
    }
    action
    {
        log console
        {
            GlobalCount
        }
        " <"
        {
            File
        }
        ":"
        {
            Line
        }
        "> ("
        {
            ComponentName
        }
        "["
        {
            ScaffoldIdx
        }
        "]) {"
        {
            Cycles
        }
        "}- Assertion failed: ("
        {
            Condition
        }
        ") : "
        {
            Message
        }
        "\n";
        log(debug.out)
        {
            GlobalCount
        }
        " <"
        {
            File
        }
        ":"
        {
            Line
        }
        "> ("
        {
            ComponentName
        }
        "["
        {
            ScaffoldIdx
        }
        "]) {"
        {
            Cycles
        }
        "}- Assertion failed: ("
        {
            Condition
        }
        ") : "
        {
            Message
        }
        "\n";
        abort;
    }
}
