# DO-NOT-REMOVE begin-copyright-block 
#
# Redistributions of any form whatsoever must retain and/or include the
# following acknowledgment, notices and disclaimer:
#
# This product includes software developed by Carnegie Mellon University.
#
# Copyright 2012 by Mohammad Alisafaee, Eric Chung, Michael Ferdman, Brian 
# Gold, Jangwoo Kim, Pejman Lotfi-Kamran, Onur Kocberber, Djordje Jevdjic, 
# Jared Smolens, Stephen Somogyi, Evangelos Vlachos, Stavros Volos, Jason 
# Zebchuk, Babak Falsafi, Nikos Hardavellas and Tom Wenisch for the SimFlex 
# Project, Computer Architecture Lab at Carnegie Mellon, Carnegie Mellon University.
#
# For more information, see the SimFlex project website at:
#   http://www.ece.cmu.edu/~simflex
#
# You may not use the name "Carnegie Mellon University" or derivations
# thereof to endorse or promote products derived from this software.
#
# If you modify the software you must place a notice on or within any
# modified version provided or made available to any third party stating
# that you have modified the software.  The notice shall include at least
# your name, address, phone number, email address and the date and purpose
# of the modification.
#
# THE SOFTWARE IS PROVIDED "AS-IS" WITHOUT ANY WARRANTY OF ANY KIND, EITHER
# EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO ANY WARRANTY
# THAT THE SOFTWARE WILL CONFORM TO SPECIFICATIONS OR BE ERROR-FREE AND ANY
# IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
# TITLE, OR NON-INFRINGEMENT.  IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY
# BE LIABLE FOR ANY DAMAGES, INCLUDING BUT NOT LIMITED TO DIRECT, INDIRECT,
# SPECIAL OR CONSEQUENTIAL DAMAGES, ARISING OUT OF, RESULTING FROM, OR IN
# ANY WAY CONNECTED WITH THIS SOFTWARE (WHETHER OR NOT BASED UPON WARRANTY,
# CONTRACT, TORT OR OTHERWISE).
#
# DO-NOT-REMOVE end-copyright-block   
###############################################################################
# Flexus setup
###############################################################################
# You will have to fill in the MAKE variables in this section to match your
# environment


# GCC Compiler Settings
GCC_PATH=/home/parsacom/tools/gcc-qflex
GCC_BINARY=g++ --std=c++11
GCC_VERSION_NOCHECK=true

# Boost 1.59.0 path
BOOST_PATH=/home/msutherl/include
BOOST_BINARIES=/home/msutherl/lib
BOOST_VERSION_NOCHECK=true

# soNUMA software path
SON_SW_PATH=/home/msutherl/qflex

###############################################################################
# You are unlikely to have to modify variables below here
###############################################################################

ECHO=echo

# Make control flags
SILENT_MAKE=-s # Comment this out or change to -d to debug the Makefiles

# Remove implicit rules to speed up operation
SILENT_MAKE+=-r

# Directories
CORE_DIR=$(FLEXUS_ROOT)/core
COMPONENTS_DIR=$(FLEXUS_ROOT)/components
SIMULATORS_DIR=$(FLEXUS_ROOT)/simulators

# Include paths
FLEXUS_INCLUDE=$(FLEXUS_ROOT)
BOOST_INCLUDE=$(BOOST_PATH)

# Target Emulator
export TARGET_EMULATOR=qemu

INCLUDES=-DBOOST_MPL_CFG_NO_PREPROCESSED_HEADERS -DBOOST_MPL_LIMIT_VECTOR_SIZE=50 -isystem $(BOOST_INCLUDE) -I$(FLEXUS_INCLUDE) -IDRAMSim2 -isystem $(SON_SW_PATH)
BOOST_LIBRARIES=-Wl,--no-whole-archive,-rpath=$(BOOST_BINARIES) -L$(BOOST_BINARIES) -lboost_system -lboost_regex -lboost_serialization -lboost_iostreams -lz

# other constants
# List of "special" cpp files in components that are not part of a components library
CORE=core
CORE_QEMU=core_qemu
SPECIAL_COMPONENT_CPPS = test.cpp

# Compiler settings

ifneq ($(strip $(GCC_PATH)),)
GCC=$(GCC_PATH)/bin/$(GCC_BINARY)
else
GCC=$(GCC_BINARY)
endif

GCC_LIB_PATH=$(GCC_PATH)/lib
GCC_OPTFLAGS=-g3 #-O2 -O3 -funroll-loops -fno-strict-aliasing
#UNCOMMENT FOR GCC
GCC_LANGFLAGS=-Wall -fmessage-length=160 -fpermissive -x c++ -fPIC #-Werror -Wno-unused -Wno-maybe-uninitialized -Wno-parentheses -Wno-int-to-pointer-cast -Wno-logical-not-parentheses -DNO_STORAGE -DBOOST_SYSTEM_NO_DEPRECATED 
#UNCOMMENT FOR CLANG
#GCC_LANGFLAGS=-Wall -fmessage-length=160 -x c++ -fPIC -fpermissive -Werror -Wno-unused -Wno-uninitialized -Wno-parentheses -Wno-int-to-pointer-cast -Wno-logical-not-parentheses -Wno-write-strings -Wno-string-plus-int -Wno-mismatched-tags -Wno-overloaded-virtual -Wno-redeclared-class-member -Wno-null-dereference -Wno-tautological-constant-out-of-range-compare -Wno-constant-logical-operand -Wno-unknown-pragmas -Wno-mismatched-new-delete -Wno-tautological-undefined-compare -DNO_STORAGE -DBOOST_SYSTEM_NO_DEPRECATED 
ARCH_FLAGS=
GCC_CFLAGS=-c $(GCC_OPTFLAGS) $(GCC_LANGFLAGS) $(ARCH_FLAGS) -fPIC
GCC_LFLAGS=-Wl,--whole-archive -fPIC
GCC_QEMU_LFLAGS=-shared -Wl,--whole-archive -Wl,-export-dynamic
GCC_DEPFLAGS=-M

AR=ar
AR_FLAGS=r
RANLIB=ranlib

# For microcode
MASM_CPP = /lib/cpp
MASM = $(COMPONENTS_DIR)/ProtocolEngine/masm/masm


# Useful functions
COMPONENT_HAS_LIBRARY = $(if $(strip $(filter-out $(SPECIAL_COMPONENT_CPPS),$(notdir $(wildcard $(COMPONENTS_DIR)/$(1)/*.cpp)))),yes,no)

FILTER_LIBS = $(filter %.a,$1)
FILTER_CPPS = $(filter %.cpp,$1)


