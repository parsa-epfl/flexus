# feeder: DecoupledFeeder
flexus.set "-feeder:stick"                                       "0.0" # "CPU System tick frequency. 0.0 leaves frequency unchanged" (SystemTickFrequency)
flexus.set "-feeder:housekeeping_period"                        "1000" # "Simics cycles between housekeeping events" (HousekeepingPeriod)
flexus.set "-feeder:ifetch"                                        "1" # "Track and report instruction fetches" (TrackIFetch)
flexus.set "-feeder:CMPwidth"                                      "0" # "Number of cores per CMP chip (0 = sys width)" (CMPWidth)
flexus.set "-feeder:send_non_allocating_stores"                    "0" # "Send NonAllocatingStores on/off" (SendNonAllocatingStores)

# L1d: FastCache
flexus.set "-L1d:mt_width"                                         "1" # "Number of threads sharing this cache" (MTWidth)
flexus.set "-L1d:size"                                         "32768" # "Cache size in bytes" (Size)
flexus.set "-L1d:assoc"                                            "8" # "Set associativity" (Associativity)
flexus.set "-L1d:bsize"                                           "64" # "Block size" (BlockSize)
flexus.set "-L1d:clean_evict"                                      "1" # "Issue clean evictions" (CleanEvictions)
flexus.set "-L1d:level"                                            "1" # "CacheLevel" (eL1)
flexus.set "-L1d:notify_reads"                                     "0" # "Notify on reads (does not notify on fast-hit)" (NotifyReads)
flexus.set "-L1d:notify_writes"                                    "0" # "Notify on writes" (NotifyWrites)
flexus.set "-L1d:trace_tracker_on"                                 "0" # "Turn trace tracker on/off" (TraceTracker)
flexus.set "-L1d:rsize"                                         "1024" # "Region size in bytes" (RegionSize)
flexus.set "-L1d:rt_assoc"                                        "16" # "RegionTracker Associativity" (RTAssoc)
flexus.set "-L1d:rt_size"                                       "8192" # "RegionTracker size (number of regions tracked)" (RTSize)
flexus.set "-L1d:rt_repl"                                        "LRU" # "RegionTracker replacement policy (SetLRU | RegionLRU)" (RTReplPolicy)
flexus.set "-L1d:erb_size"                                         "8" # "Evicted Region Buffer size" (ERBSize)
flexus.set "-L1d:std_array"                                        "1" # "Use Standard Tag Array instead of RegionTracker" (StdArray)
flexus.set "-L1d:block_scout"                                      "0" # "Use precise block sharing info" (BlockScout)
flexus.set "-L1d:skew_block_set"                                   "0" # "skew block set indices based on rt way" (SkewBlockSet)
flexus.set "-L1d:protocol"                             "InclusiveMESI" # "Name of the coherence protocol (InclusiveMOESI)" (Protocol)
flexus.set "-L1d:using_traces"                                     "0" # "References are coming from traces (allow certain inconsistancies" (UsingTraces)
flexus.set "-L1d:text_flexpoints"                                  "1" # "Store flexpoints as text files (compatible with old FastCache component)" (TextFlexpoints)
flexus.set "-L1d:gzip_flexpoints"                                  "0" # "Compress flexpoints with gzip" (GZipFlexpoints)
flexus.set "-L1d:downgrade_lru"                                    "0" # "Move block to LRU position when a Downgrade is recieved for a block in Modified or Exclusive state" (DowngradeLRU)
flexus.set "-L1d:snoop_lru"                                        "0" # "Move block to LRU position when a Snoop (ReturnReq) is recieved for a block in Modified or Exclusive state" (SnoopLRU)

# L1i: FastCache
flexus.set "-L1i:mt_width"                                         "1" # "Number of threads sharing this cache" (MTWidth)
flexus.set "-L1i:size"                                         "32768" # "Cache size in bytes" (Size)
flexus.set "-L1i:assoc"                                            "8" # "Set associativity" (Associativity)
flexus.set "-L1i:bsize"                                           "64" # "Block size" (BlockSize)
flexus.set "-L1i:clean_evict"                                      "1" # "Issue clean evictions" (CleanEvictions)
flexus.set "-L1i:level"                                            "9" # "CacheLevel" (eL1I)
flexus.set "-L1i:notify_reads"                                     "0" # "Notify on reads (does not notify on fast-hit)" (NotifyReads)
flexus.set "-L1i:notify_writes"                                    "0" # "Notify on writes" (NotifyWrites)
flexus.set "-L1i:trace_tracker_on"                                 "0" # "Turn trace tracker on/off" (TraceTracker)
flexus.set "-L1i:rsize"                                         "1024" # "Region size in bytes" (RegionSize)
flexus.set "-L1i:rt_assoc"                                        "16" # "RegionTracker Associativity" (RTAssoc)
flexus.set "-L1i:rt_size"                                       "8192" # "RegionTracker size (number of regions tracked)" (RTSize)
flexus.set "-L1i:rt_repl"                                        "LRU" # "RegionTracker replacement policy (SetLRU | RegionLRU)" (RTReplPolicy)
flexus.set "-L1i:erb_size"                                         "8" # "Evicted Region Buffer size" (ERBSize)
flexus.set "-L1i:std_array"                                        "1" # "Use Standard Tag Array instead of RegionTracker" (StdArray)
flexus.set "-L1i:block_scout"                                      "0" # "Use precise block sharing info" (BlockScout)
flexus.set "-L1i:skew_block_set"                                   "0" # "skew block set indices based on rt way" (SkewBlockSet)
flexus.set "-L1i:protocol"                             "InclusiveMESI" # "Name of the coherence protocol (InclusiveMOESI)" (Protocol)
flexus.set "-L1i:using_traces"                                     "0" # "References are coming from traces (allow certain inconsistancies" (UsingTraces)
flexus.set "-L1i:text_flexpoints"                                  "1" # "Store flexpoints as text files (compatible with old FastCache component)" (TextFlexpoints)
flexus.set "-L1i:gzip_flexpoints"                                  "0" # "Compress flexpoints with gzip" (GZipFlexpoints)
flexus.set "-L1i:downgrade_lru"                                    "0" # "Move block to LRU position when a Downgrade is recieved for a block in Modified or Exclusive state" (DowngradeLRU)
flexus.set "-L1i:snoop_lru"                                        "0" # "Move block to LRU position when a Snoop (ReturnReq) is recieved for a block in Modified or Exclusive state" (SnoopLRU)

# L2: FastCMPCache
flexus.set "-L2:CMPWidth"                                          "0" # "Number of cores per CMP chip (0 = sys width)" (CMPWidth)
flexus.set "-L2:size"                                        "2097152" # "Cache size in bytes" (Size)
flexus.set "-L2:assoc"                                            "16" # "Set associativity" (Associativity)
flexus.set "-L2:bsize"                                            "64" # "Block size" (BlockSize)
flexus.set "-L2:clean_evict"                                       "0" # "Issue clean evictions" (CleanEvictions)
flexus.set "-L2:level"                                             "2" # "CacheLevel" (eL2)
flexus.set "-L2:trace_tracker_on"                                  "0" # "Turn trace tracker on/off" (TraceTracker)
flexus.set "-L2:repl"                                         "SetLRU" # "RegionTracker replacement policy (SetLRU | RegionLRU)" (RTReplPolicy)
flexus.set "-L2:rsize"                                          "1024" # "Region size in bytes" (RegionSize)
flexus.set "-L2:rt_assoc"                                         "16" # "RegionTracker Associativity" (RTAssoc)
flexus.set "-L2:rt_size"                                        "8192" # "RegionTracker size (number of regions tracked)" (RTSize)
flexus.set "-L2:erb_size"                                          "8" # "Evicted Region Buffer size" (ERBSize)
flexus.set "-L2:std_array"                                         "1" # "Use Standard Tag Array instead of RegionTracker" (StdArray)
flexus.set "-L2:directory_type" "Standard:sets=2048:assoc=16:repl=lru" # "Directory Type" (DirectoryType)
flexus.set "-L2:protocol"                                  "SingleCMP" # "Protocol Type" (Protocol)
flexus.set "-L2:always_multicast"                                  "0" # "Perform multicast instead of serial snooping" (AlwaysMulticast)
flexus.set "-L2:seperate_id"                                       "1" # "Track Instruction and Data caches separately" (SeparateID)
flexus.set "-L2:coherence_unit"                                   "64" # "Coherence Unit" (CoherenceUnit)

# bpwarm: BPWarm
flexus.set "-bpwarm:cores"                                         "1"
flexus.set "-bpwarm:btbsets"                                     "512"
flexus.set "-bpwarm:btbways"                                       "4"

# mmu: MMU
flexus.set "-mmu:cores"                                            "1"
flexus.set "-mmu:itlbsets"                                         "1"
flexus.set "-mmu:itlbways"                                        "32"
flexus.set "-mmu:dtlbsets"                                         "1"
flexus.set "-mmu:dtlbways"                                        "32"
flexus.set "-mmu:stlblat"                                          "2"
flexus.set "-mmu:stlbsets"                                      "1024"
flexus.set "-mmu:stlbways"                                         "4"
flexus.set "-mmu:perfect"                                      "false"
